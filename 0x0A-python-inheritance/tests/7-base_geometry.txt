# The test file to 7-base_geometry

>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

>>> bg = BaseGeometry()

>>> bg.integer_validator("my_int", 12)

>>> bg.integer_validator("width", 89)

>>> bg.integer_validator("name", "John")
Traceback (most recent call last):
TypeError: name must be an integer

>>> bg.integer_validator("age", 0)
Traceback (most recent call last):
ValueError: age must be greater than 0

>>> bg.integer_validator("distance", -4)
Traceback (most recent call last):
ValueError: distance must be greater than 0

>>> bg.integer_validator("distance", 1.5)
Traceback (most recent call last):
TypeError: distance must be an integer

>>> bg.integer_validator("distance", True)
Traceback (most recent call last):
TypeError: distance must be an integer

>>> bg.integer_validator("test", 1, 2)
Traceback (most recent call last):
TypeError: integer_validator() takes 3 positional arguments but 4 were given

>>> bg.integer_validator("distance")
Traceback (most recent call last):
TypeError: integer_validator() missing 1 required positional argument: 'value'

>>> bg.integer_validator()
Traceback (most recent call last):
TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

>>> doc1 = __import__("7-base_geometry").__doc__
>>> len(doc1) > 1
True

>>> doc2 = __import__("7-base_geometry").BaseGeometry.__doc__
>>> len(doc2) > 1
True

>>> doc3 = __import__("7-base_geometry").BaseGeometry.area.__doc__
>>> len(doc3) > 1
True

>>> doc4 = __import__("7-base_geometry").BaseGeometry.integer_validator.__doc__
>>> len(doc4) > 1
True

